// <auto-generated />
using System;
using EsteticaBackend.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EsteticaBackend.Migrations
{
    [DbContext(typeof(EsteticaDbContext))]
    [Migration("20200229181532_Atendimento e Procedimento")]
    partial class AtendimentoeProcedimento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EsteticaBackend.Models.Atendimento", b =>
                {
                    b.Property<int>("AtendimentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cancelado");

                    b.Property<int?>("ClientePessoaId");

                    b.Property<DateTime>("DataMarcada");

                    b.Property<bool>("EmAndamento");

                    b.Property<bool>("Finalizado");

                    b.Property<int?>("ProcedimentoId");

                    b.Property<int?>("ProfissionalPessoaId");

                    b.HasKey("AtendimentoId");

                    b.HasIndex("ClientePessoaId");

                    b.HasIndex("ProcedimentoId");

                    b.HasIndex("ProfissionalPessoaId");

                    b.ToTable("Atendimento");
                });

            modelBuilder.Entity("EsteticaBackend.Models.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Identidade");

                    b.Property<string>("Nome");

                    b.HasKey("PessoaId");

                    b.ToTable("Pessoa");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("EsteticaBackend.Models.Procedimento", b =>
                {
                    b.Property<int>("ProcedimentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duração");

                    b.Property<string>("Nome");

                    b.Property<float>("Valor");

                    b.HasKey("ProcedimentoId");

                    b.ToTable("Procedimento");
                });

            modelBuilder.Entity("EsteticaBackend.Models.Telefone", b =>
                {
                    b.Property<int>("TelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Numero");

                    b.Property<int?>("PessoaId");

                    b.HasKey("TelefoneId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("EsteticaBackend.Models.Cliente", b =>
                {
                    b.HasBaseType("EsteticaBackend.Models.Pessoa");

                    b.ToTable("Cliente");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("EsteticaBackend.Models.Profissional", b =>
                {
                    b.HasBaseType("EsteticaBackend.Models.Pessoa");

                    b.Property<string>("Funcao");

                    b.ToTable("Profissional");

                    b.HasDiscriminator().HasValue("Profissional");
                });

            modelBuilder.Entity("EsteticaBackend.Models.Atendimento", b =>
                {
                    b.HasOne("EsteticaBackend.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClientePessoaId");

                    b.HasOne("EsteticaBackend.Models.Procedimento", "Procedimento")
                        .WithMany()
                        .HasForeignKey("ProcedimentoId");

                    b.HasOne("EsteticaBackend.Models.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalPessoaId");
                });

            modelBuilder.Entity("EsteticaBackend.Models.Telefone", b =>
                {
                    b.HasOne("EsteticaBackend.Models.Pessoa")
                        .WithMany("Telefones")
                        .HasForeignKey("PessoaId");
                });
#pragma warning restore 612, 618
        }
    }
}
